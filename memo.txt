<!DOCTYPE HTML>

「似た問題を解いてみる」
リストの中でランダムな場合の処理

    // 似た問題の優先順位リスト
    var similarQuestions = [6, 16, 21, 40, 41, 43, 44, 47, 48];
    var nextSimilarQuestion = null;

    var SimrandomunansQ = similarQuestions.filter(function(question) {
      return !answeredQuestions.includes(question);
    });
    if (SimrandomunansQ.length > 0) {
      var randomIndex = Math.floor(Math.random() * SimrandomunansQ.length);
      nextSimilarQuestion = SimrandomunansQ[randomIndex];
    }

「異なる問題にチャレンジする」
リストの中でランダムな場合の処理

    // 異なる問題の優先順位リスト
    var differentQuestions = [1, 10, 12, 13, 14, 18, 23, 25, 27, 28, 29, 30, 33, 34, 35, 36, 37, 45, 50];
    var nextdifferentQuestion = null;

    var DifrandomunansQ = differentQuestions.filter(function(question) {
      return !answeredQuestions.includes(question);
    });
    if (DifrandomunansQ.length > 0) {
      var randomIndex = Math.floor(Math.random() * DifrandomunansQ.length);
      nextdifferentQuestion = DifrandomunansQ[randomIndex];
    }


